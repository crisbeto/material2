@use '@material/chips/chip' as mdc-chip;
@use '@material/chips/chip-set' as mdc-chip-set;
@use '@material/ripple' as mdc-ripple;
@use '../../material/core/style/layout-common';
@use '../../cdk/a11y';
@use '../mdc-helpers/mdc-helpers';

@include mdc-chip.without-ripple-styles();
@include mdc-chip-set.core-styles();

// TODO: remove icon color and potentially focus styles.

// @include mdc-chips.without-ripple($query: mdc-helpers.$mat-base-styles-query);
// @include mdc-chips.set-core-styles($query: mdc-helpers.$mat-base-styles-query);

.mat-mdc-chip {
  // // MDC uses a pointer cursor
  // cursor: default;

  // &._mat-animation-noopable {
  //   animation: none;
  //   transition: none;

  //   .mdc-chip__checkmark-svg {
  //     transition: none;
  //   }
  // }

  @include a11y.high-contrast(active, off) {
    outline: solid 1px;

    &.cdk-focused {
      // Use 2px here since the dotted outline is a little thinner.
      outline: dotted 2px;
    }
  }

  // Angular Material supports disabled chips, which MDC does not.
  // Dim the disabled chips and stop MDC from changing the icon color on click.
  &.mdc-evolution-chip--disabled {
    opacity: 0.4;
  }
}

// MDC's focus and hover indication is handled through their ripple which we currently
// don't use due to size concerns so we have to re-implement it ourselves.
.mat-mdc-chip-focus-overlay {
  @include layout-common.fill;
  content: '';
  pointer-events: none;
  opacity: 0;
  border-radius: inherit;
  transition: opacity 150ms linear;

  ._mat-animation-noopable & {
    transition: none;
  }

  .mat-mdc-basic-chip & {
    display: none;
  }

  .mat-mdc-chip:hover & {
    opacity: 0.04;
  }

  .mat-mdc-chip.cdk-keyboard-focused &,
  .mat-mdc-chip.cdk-program-focused & {
    opacity: 0.12;
  }
}

// The ripple container should match the bounds of the entire chip.
.mat-mdc-chip-ripple {
  @include layout-common.fill;

  // Disable pointer events for the ripple container and state overlay because the container
  // will overlay the user content and we don't want to disable mouse events on the user content.
  // Pointer events can be safely disabled because the ripple trigger element is the host element.
  pointer-events: none;

  // Inherit the border radius from the parent so that state overlay and ripples don't exceed the
  // parent button boundaries.
  border-radius: inherit;
}

.mat-mdc-chip-avatar {
  // In case an icon or text is used as an avatar.
  text-align: center;
  line-height: 1;
}

// Angular Material supports vertically-stacked chips, which MDC does not.
.mat-mdc-chip-set-stacked {
  flex-direction: column;
  align-items: flex-start;

  .mat-mdc-chip {
    width: 100%;
  }
}

// Add styles for the matChipInputFor input element.
$mat-chip-input-width: 150px;

input.mat-mdc-chip-input {
  flex: 1 0 $mat-chip-input-width;
}

// // The margin value is set in MDC.
// $chip-margin: 4px;

// // Don't let the chip margin increase the mat-form-field height.
// .mat-mdc-chip-grid {
//   margin: -$chip-margin;

//   // Keep the mat-chip-grid height the same even when there are no chips.
//   input.mat-mdc-chip-input {
//     margin: $chip-margin;
//   }
// }

// .mdc-chip__checkmark-path {
//   ._mat-animation-noopable & {
//     transition: none;
//   }

//   @include a11y.high-contrast(black-on-white, off) {
//     // SVG colors won't be changed in high contrast mode and since the checkmark is white
//     // by default, it'll blend in with the background in black-on-white mode. Override the color
//     // to ensure that it's visible. We need !important, because the theme styles are very specific.
//     stroke: #000 !important;
//   }
// }

// // Needed for the focus indicator.
// .mat-mdc-chip-row-focusable-text-content {
//   position: relative;
// }

.mat-mdc-chip-remove {
  .mat-icon {
    width: inherit;
    height: inherit;
    font-size: inherit;
  }
}

// .mat-mdc-chip-row-focusable-text-content,
// .mat-mdc-chip-remove-icon {
//   display: flex;
//   align-items: center;
// }

// .mat-mdc-chip-content {
//   display: inline-flex;
// }

// .mdc-chip--editing {
//   background-color: transparent;
//   display: flex;
//   flex-direction: column;

//   .mat-mdc-chip-content {
//     pointer-events: none;
//     height: 0;
//     overflow: hidden;
//   }
// }

// .mat-chip-edit-input {
//   cursor: text;
//   display: inline-block;
// }

// .mat-mdc-chip-edit-input-container {
//   width: 100%;
//   height: 100%;
//   display: flex;
//   align-items: center;
// }
